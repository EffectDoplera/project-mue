datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum OperationType {
  INCOME
  EXPENSE
}

enum Currency {
  RUB
  USD
  EUR
}

enum Role {
  USER
  ADMIN
  QA
}

model Operation {
  id          String            @id @default(uuid())
  title       String
  type        OperationType
  amount      Float
  currency    Currency          @default(RUB)
  date        DateTime          @default(now())
  commentary  String?
  categoryRef OperationCategory @relation(fields: [category], references: [title])
  category    String
  owner       User              @relation(fields: [ownerId], references: [id])
  ownerId     String
  createdAt   DateTime          @default(now()) @map(name: "created_at")
  updatedAt   DateTime          @updatedAt @map(name: "updated_at")

  @@map(name: "operations")
}

model OperationCategory {
  id         String      @id @default(uuid())
  title      String      @unique
  operations Operation[]
  createdAt  DateTime    @default(now()) @map(name: "created_at")
  updatedAt  DateTime    @updatedAt @map(name: "updated_at")

  @@map(name: "operation_categories")
}

model User {
  id            String      @id @default(uuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?   @map(name: "email_verified")
  image         String?
  role          Role        @default(USER)
  operations    Operation[]
  createdAt     DateTime    @default(now()) @map(name: "created_at")
  updatedAt     DateTime    @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Account {
  id                 String    @id @default(uuid())
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @updatedAt @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(uuid())
  userId       String   @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
